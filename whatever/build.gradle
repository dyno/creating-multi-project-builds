task cmd1(type: Exec) {
    logger.lifecycle("$delegate.name: created from $project - this->$this, owner->$owner")

    environment "WHATEVER", "ever3"
    logger.lifecycle("$delegate.name: WHATEVER=ever3: configure from $delegate")
    commandLine "bash", "-c", "env | grep WHATEVER"
}

configure(tasks.findAll({it instanceof Exec})) { task ->
    logger.lifecycle("$delegate.name: configure from $project - this->$this, owner->$owner")
    logger.lifecycle("$delegate.name: WHATEVER=ever4: configure from $delegate")
    environment "WHATEVER", "ever4"

    def cmdStr = commandLine.join(" ")
    doFirst {
        println "$delegate.name => Run `$cmdStr` ..."
    }

    doLast {
        println "$delegate.name => Run `$cmdStr` done"
    }
}

// ============================================================================
model {
    // https://docs.gradle.org/current/userguide/software_model.html#model-dsl

    pythonProject {
        logger.lifecycle("$name: configure from $project - this->$this, owner->$owner, delegate->$delegate")
        // usePipenv = false
        if (project.hasProperty("usePipenv")) {
            usePipenv = project.usePipenv
        } else {
            project.ext.usePipenv = usePipenv
        }
    }

    tasks {
        cmd1 {
            logger.lifecycle("$delegate.name: configure from $project - this->$this, owner->$owner")
            environment "WHATEVER", "ever5"
        }

        cmd2(Exec) {
            logger.lifecycle("$delegate.name: configure from $project - this->$this, owner->$owner")
            commandLine "echo", "i am $name"
            if (usePipenv) {
                dependsOn cmd1
            }
        }
    }
}


